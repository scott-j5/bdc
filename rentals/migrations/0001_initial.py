# Generated by Django 3.2.4 on 2022-03-24 10:45

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imageit.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
        ('invoicing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RentalExtra',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='products.product')),
            ],
            bases=('products.product',),
        ),
        migrations.CreateModel(
            name='RentalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RentalProduct',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='products.product')),
                ('min_turnaround', models.IntegerField(blank=True, default=1, help_text='Minimum time between return and re-rental in Hours', null=True)),
            ],
            bases=('products.product',),
        ),
        migrations.CreateModel(
            name='RentalRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RentalPriceAdjustment',
            fields=[
                ('priceadjustment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='invoicing.priceadjustment')),
                ('products', models.ManyToManyField(to='rentals.RentalProduct')),
            ],
            bases=('invoicing.priceadjustment',),
        ),
        migrations.CreateModel(
            name='RentalFulfilment',
            fields=[
                ('productfulfilment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='products.productfulfilment')),
                ('rental_start', models.DateTimeField()),
                ('rental_end', models.DateTimeField()),
                ('rental_end_inc_turnaround', models.DateTimeField(default=django.utils.timezone.now)),
                ('rental_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('rental_extras', models.ManyToManyField(to='rentals.RentalExtra')),
            ],
            bases=('products.productfulfilment',),
        ),
        migrations.CreateModel(
            name='RentalDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('dob', models.DateField()),
                ('licence_front', imageit.models.CropItImageField(upload_to='')),
                ('licence_back', imageit.models.CropItImageField(upload_to='')),
                ('rental_fulfilment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentals.rentalfulfilment')),
                ('user', models.ForeignKey(on_delete=models.SET(core.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
