# Generated by Django 3.2.4 on 2022-03-24 10:45

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imageit.models
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('invoicing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, help_text='Url appropriate characters only, no spaces', unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description_short', models.TextField(blank=True, null=True)),
                ('description_long', models.TextField(blank=True, null=True)),
                ('rentable', models.BooleanField(default=False)),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Price')),
                ('qty', models.IntegerField(default=0)),
                ('available', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon_class', models.CharField(blank=True, help_text='Search Bootstrap icons, Feather Icons or Font awesome icons for available class names.', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPriceAdjustment',
            fields=[
                ('priceadjustment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='invoicing.priceadjustment')),
                ('display_to_user', models.BooleanField(default=False)),
                ('products', models.ManyToManyField(blank=True, to='products.Product')),
            ],
            bases=('invoicing.priceadjustment',),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imageit.models.ScaleItImageField(max_height=1500, max_width=1500, quality=100, upload_to=products.models.ProductImage.get_upload_path, upscale=False)),
                ('primary', models.BooleanField(default=False, help_text='Square shape reccomended. Primary images should really highlight the essence of the product')),
                ('banner', models.BooleanField(default=False, help_text='Banner images should be in a landscape format for best results')),
                ('thumbnail', models.BooleanField(default=False, help_text='Thumbnail photo dimensions should be square for best results')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductFulfilment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fulfilment_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('fulfilled_product_price', models.DecimalField(blank=True, decimal_places=2, help_text='Records the product base price at time of fulfilment', max_digits=10)),
                ('fulfilled_price', models.DecimalField(blank=True, decimal_places=2, help_text='Records actual fulfilled price', max_digits=10)),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, help_text='Override default pricing', max_digits=10, null=True)),
                ('fulfilling_user', models.ForeignKey(on_delete=models.SET(core.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=models.SET(products.models.get_sentinel_product), to='products.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='features',
            field=models.ManyToManyField(blank=True, to='products.ProductFeature'),
        ),
    ]
